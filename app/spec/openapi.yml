---
openapi: "3.0.2"
info:
  description: "Api team-mgmt"
  version: "1.0.0"
  title: "Api for manage project team"
  termsOfService: ""
schemes:
- http
consumes:
- application/json
produces:
- application/json
paths:
  /projects:
    get:
      summary: "List of projects"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "/#/definitions/schemas/Project"
    post:
      summary: "Add a project"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "/#/definitions/schemas/Project"
      responses:
        201:
          description: "Status 201"
          headers:
            name: "Location"
            description: "Location of team created"
            schema:
              type: string
          schema:
            $ref: "/#/definitions/schemas/Project"
  /projects/{id}:
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      get:
        summary: "Get one project"
        responses:
          200:
            description: "Status 200"
            schema:
              $ref: "/#/definitions/schemas/Project"
          404:
            $ref: "/#/definitions/responses/notFound"
      put:
        summary: "Modify a project"
        parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            $ref: "/#/definitions/schemas/Project"
        responses:
          200:
            description: "Status 200"
          404:
            $ref: "/#/definitions/responses/notFound"
      delete:
        summary: "Delete one project"
        parameters: []
        responses:
          200:
            description: "Status 200"
          404:
            $ref: "/#/definitions/responses/notFound"
  /projects/{id}/customers:
    get:
      summary: "List of customers"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
            $ref: "/#/definitions/schemas/Customer"
        404:
          $ref: "/#/definitions/responses/notFound"
    post:
      summary: "Add a customer to a project"
      responses:
        201:
          description: "Status 201"
          headers:
            name: "Location"
            description: "Location of team created"
            schema:
              type: string
          schema:
            $ref: "/#/definitions/schemas/Customer"
  /projects/{id}/customers/{id}:
    get:
      summary: "Get a member from project"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "/#/definitions/schemas/Customer"
        404:
          $ref: "/#/definitions/responses/notFound"
    delete:
      summary: "Delete a member from project"
      responses:
        200:
          description: "Status 200"
        404:
          $ref: "/#/definitions/responses/notFound"
  /projects/{id}/teams:
    get:
      summary: "List of teams of project"
      responses:
        200:
          description: "Status 200"
          schema:
            type: "array"
            items:
              $ref: "/#/definitions/schemas/Team"
        404:
          $ref: "/#/definitions/responses/notFound"
    post:
      summary: "Add a team"
      parameters:
      - name: "body"
        in: "body"
        required: true
        schema:
          $ref: "/#/definitions/schemas/Team"
      responses:
        201:
          description: "Status 201"
          headers:
            name: "Location"
            description: "Location of team created"
            schema:
              type: string
          schema:
            $ref: "/#/definitions/schemas/Team"
        404:
          $ref: "/#/definitions/responses/notFound"
  /projects/{id}/teams/{id}:
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      get:
        summary: "Get a team"
        responses:
          200:
            description: "Status 200"
            schema:
              $ref: "/#/definitions/schemas/Team"
          404:
            $ref: "/#/definitions/responses/notFound"
      put:
        summary: "Modify a team"
        responses:
          200:
            description: "Status 200"
            schema:
              $ref: "/#/definitions/schemas/Team"
          404:
            $ref: "/#/definitions/responses/notFound"
      delete:
        summary: "Delete a team"
        responses:
          200:
            description: "Status 200"
          404:
            $ref: "/#/definitions/responses/notFound"
  /projects/{id}/teams/{id}/members:
    get:
      summary: "Get list of team members"
      responses:
        200:
          description: "Status 200"
          schema:
            type: array
            items:
              $ref: "/#/definitions/schemas/Employee"
        404:
          $ref: "/#/definitions/responses/notFound"
    post:
      summary: "Add a member to the team"
      responses:
        201:
          description: "Status 200"
          headers:
            name : "Location"
            description: "Location of team created"
            schema:
              type: string
          schema:
            $ref: "/#/definitions/schemas/Employee"
  /projects/{id}/teams/{id}/members/{id}:
    get:
      summary: "Get a member"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "/#/definitions/schemas/Employee"
        404:
          $ref: "/#/definitions/responses/notFound"
    delete:
      summary: "Delete an member"
      responses:
        200:
          description: "Status 200"
        404:
          $ref: "/#/definitions/responses/notFound"

definitions:
  schemas:
    Project:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
          description: "name of the project"
        description:
          type: "string"
          description: "description of the project"
        customer:
          $ref: "/#/definitions/schemas/Customer"
    Customer:
      type: "object"
      properties:
        id:
          type: "string"
        firstname:
          type: "string"
        lastname:
          type: "string"
    Team:
      type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
        project:
          $ref: "/#/definitions/schemas/Project"
        members:
          type: "array"
          items:
            $ref: "/#/definitions/schemas/Employee"
    Employee:
      type: "object"
      required:
      - "firstname"
      - "id"
      - "lastname"
      properties:
        id:
          type: "string"
        firstname:
          type: "string"
        lastname:
          type: "string"
        function:
          type: "string"
          description: "'Project manager', 'Project leader', 'Scrum master', 'Team leader',\
            \ 'Developer', 'Architect', 'Analyst'"
  responses:
    notFound:
      description: "Not found"



